name: Docker push for latest

on:
  push:
    branches:
    - master
    tags:
      - 'v*'
  release:
    types: [published]

jobs:
  build_and_push:
    runs-on: ubuntu-20.04
    steps:
    - run: echo ${{github.ref_name}}
    - uses: actions/checkout@v4
    - name: Create Docker image names
      id: create-docker-image-names
      uses: actions/github-script@v6
      with:
        # language=js
        script: |
          const dockerImageNames = [];
          if (context.payload.ref === 'refs/heads/master') {
            dockerImageNames.push('nwtgck/go-piping-server:latest');
          }
          const matched = context.payload.ref.match(/^refs\/tags\/(.*)$/);
          if (matched !== null) {
            dockerImageNames.push(`nwtgck/go-piping-server:${matched[1]}`);
          }
          console.log('dockerImageNames:', dockerImageNames);
          const shouldPush = dockerImageNames.length !== 0;
          core.setOutput('docker-push', shouldPush + "");
          core.setOutput('docker-image-names', shouldPush ? dockerImageNames.join(",") : "dummy_image_name_not_to_push");
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: nwtgck
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
        push: ${{ steps.create-docker-image-names.outputs.docker-push }}
        tags: ${{ steps.create-docker-image-names.outputs.docker-image-names }}
